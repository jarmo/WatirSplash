=== Version 2.4.0 / 2011-09-25

 * add WatirSplash::Browser.exist? method
 * redirect all method invocations on WatirSplash::Browser.current when method doesn't exist in WatirSplash::Browser class itself


=== Version 2.3.2 / 2011-09-25

 * add support for spork-local_process

=== Version 2.3.1 / 2011-09-11

 * minor fix in WatirSplash::Page::Base

=== Version 2.3.0 / 2011-09-10

 * add JavaScript errors detection for all supported frameworks & browsers - read more from wiki: https://github.com/jarmo/WatirSplash/wiki/Detecting-JavaScript-Errors

=== Version 2.2.0 / 2011-09-10

 * watir-webdriver/firefox is now the default framework under Linux and OS X
 * Page objects will reuse WatirSplash::Browser.current if it exists
 * added Page#redirect_to for redirecting to another Page object
 * require spec_helper relatively from working directory

=== Version 2.1.1 / 2011-08-18

 * bumped Watir dependency to 2.0.1
 * bumped Watir-WebDriver dependency to 0.3.1

=== Version 2.1.0 / 2011-07-11

 * integrated with Spork for faster environment loading
 * all options to RSpec should be provided now via .rspec file

=== Version 2.0.0 / 2011-07-06

 * added Page Objects support - generate them with `watirsplash page` generator 
 * added #during RSpec matcher
 * added :default option for frameworks 
 * using Bundler for specifying runtime dependencies 
 * loading environment.rb directly from .rspec file
 * use WatirSplash::Browser.new to open up a browser and set it up with RSpec's formatter
 * use WatirSplash::Browser.current method to access current browser object globally
 * use @browser variable in WatirSplash::Page objects to access browser object 
 * moved File.path and File.native_path methods to WatirSplash::Util.file_path and .file_native_path since File.path method conflicts with Ruby 1.9
 * removed ui-test-common functionality - just load it's environment.rb if you really need to use it
 * removed deprecated #in RSpec matcher
 * do not load framework automatically anymore when requiring watirsplash - use WatirSplash::Util.load_framework method in environment.rb or config.rb instead
 * do not open browser window automatically anymore - use RSpec.configure block in config.rb if needed
 * do not maximize browser window anymore automatically - use RSpec configure block in config.rb if needed
 * bumped dependencies for win32screenshot, watir, firewatir and watir-webdriver
  
  PS! This version is not fully backwards compatible due to some core changes, but it is possible to make your old project working with it.

=== Version 1.4.3 / 2011-06-05

 * fix #change matcher in conjunction with #within for rspec 2.6.0

=== Version 1.4.2 / 2011-06-01

 * handle correctly RSpec shared examples by html formatter

=== Version 1.4.1 / 2011-06-01

 * bump rspec dependency to 2.6.0
 * bump watir-webdriver dependency to 0.2.3

=== Version 1.4.0 / 2011-04-30

 * deprecated #in(timeout) method - use #within(timeout) instead
 * added #seconds/#second and #minutes/#minute method to RSpec matchers for making it possible to use them together with #within(timeout) method

=== Version 1.3.0 / 2011-04-22

 * handle RSpec's #should_not correctly when using #in(timeout)
 * added #soon for RSpec's matcher as an alias for #in(30)

=== Version 1.2.1 / 2011-04-17

 * use RSpec's multiple formatters support functionality directly

=== Version 1.2.0 / 2011-04-16

 * fixed Watir::Browser#attach for Watir::IE
 * added #in(timeout) method for all RSpec matchers (read more about it on the wiki https://github.com/jarmo/WatirSplash/wiki/RSpec-Features)
 * added #make as an alias for #change as a RSpec matcher
 * bump watir/firewatir dependency to 1.8.1
 * bump watir-webdriver dependency to 0.2.2
 * bump win32screenshot dependency to 1.0.3

=== Version 1.1.2 / 2011-03-22

 * bump watir/firewatir dependency to 1.8.0
 * bump watir-webdriver dependency to 0.2.1
 * patch temporarily MiniMagick to handle spaces in file paths when saving screenshots on Windows (https://github.com/probablycorey/mini_magick/pull/38)
  
=== Version 1.1.1 / 2011-02-17

 * Minor fix for RSpec involving example groups without enough metadata

=== Version 1.1.0 / 2011-02-17

 * browser methods will be cached by #method_missing for faster lookup
 * added support for different frameworks - Watir, FireWatir and Watir-WebDriver

=== Version 1.0.0 / 2011-01-26

 * using RSpec 2
   - if you have projects using WatirSplash <= 0.2.14 then execute `watirsplash migrate` under ui-test and ui-test-common directories!
 * removed Watir::WaitHelper - use Watir's waiting methods instead
 * using Watir 1.7.1
 * use WATIRSPLASH_RESULTS_PATH environment variable for specifying custom spec results location

=== Version 0.2.14 / 2011-01-25

* use newer RAutomation
* use newer Win32::Screenshot - you may now uninstall ImageMagick and RMagick

=== Version 0.2.12 / 2010-10-15

 * really fix integration with RAutomation and AutoIt - uninstall all versions of Watir before installing this version of WatirSplash due to the conflicts of Watir's AutoIt version and RAutomation AutoIt version

=== Version 0.2.11 / 2010-10-15

 * fix integration with RAutomation - uninstall all versions of Watir before installing this version of WatirSplash due to the conflicts of Watir's AutoIt version and RAutomation AutoIt version

=== Version 0.2.10 / 2010-10-14

 * fixed Watir 1.6.6 dependency

=== Version 0.2.9 / 2010-10-14

 * AutoItHelper is no more! Using RAutomation gem instead
 * JavaScript error messages are not screenshotted anymore due to it's complexity and vagueness of the messages themselves
 * deleted #wait_until? and #wait_while? methods

=== Version 0.2.8 / 2010-10-06

 * use Watir 1.6.6 and RSpec 1.3.0 from now on

=== Version 0.2.7 / 2010-09-27

 * added explicit dependencies for Watir 1.6.5 and RSpec 1.3.0 so upcoming versions wouldn't break things accidentally

=== Version 0.2.6 / 2010-09-12

 * moved a lot of documentation from the README to the wiki at http://github.com/jarmo/watirsplash/wiki
 * Timeout::Error will be raised if browser hasn't loaded page within 5 minutes
 * added Watir::WaitHelper with convenience methods like #when_present, #wait_until_present,
   #wait_while_present, #wait_while and #wait_while? - see about usage from the wiki!
     Timeout Exception class is now Watir::WaitHelper::TimeoutError when using the methods above
 * removed #file_path and #native_file_path methods - use File.path and File.native_path methods instead
 * removed #download_file method - use Watir::Element#save_as method instead:
     # no need to perform #click_no_wait anymore
     link(:id => 'something').save_as(File.path('download.zip')) # => returns full path to download.zip

=== Version 0.2.5 / 2010-08-19

 * #click_no_wait performance improved by 2-3x - see more from http://jira.openqa.org/browse/WTR-449
 * spec's relative filename with line number and date is shown in example_group name in the report
 * only time is shown in example name in the report

=== Version 0.2.4 / 2010-07-30

 * timestamp is now inserted into example names

Bug fixes:
 * fixed project template generated with "watirsplash generate" command

=== Version 0.2.3 / 2010-07-23

Bug fixes:
 * it is now possible to use method 'p' to find <p> elements in specs without invoking Kernel.p
 * fixed project template to use require_all instead of require_rel

=== Version 0.2.2 / 2010-06-13

 * fixed minor bugs

=== Version 0.2.1 / 2010-05-27

 * added compatibility with Win32::Screenshot 0.0.4
 * wait_until behaves exactly the same as with Watir - throws Exception upon timeout
 * removed wait_until! - use wait_until instead
 * added wait_until? which returns true if condition was true and doesn't throw Exception upon timeout

=== Version 0.2.0 / 2010-05-03

 PS! This version has some backwards incompatible changes!
 
 * added max_depth parameter to Watir::Table#to_a and Watir::TableRow#to_a methods for avoiding too complex arrays if wanted
 * watirsplash is not used to launch tests anymore - use regular RSpec's 'spec' command instead
 * tests need to be inside of 'spec' directory, because spec.opts is responsible for loading every library
 * you can launch tests with IDE by using -O spec.opts as a spec runner parameter
 * Watir::Element#style returns current CSS style for element
 * ui-test and ui-test-common project templates got changed

=== Version 0.1.9 / 2010-05-01

 * Changed name of the library to WatirSplash due to name conflict
   - this means that all watirspec commands are now obsolete and you have to use watirsplash commands instead
   - all WatiRspec constants (module names etc) are now named as WatirSplash

=== Version 0.1.8 / 2010-04-19

 * tidied up some code, no changes in functionality

=== Version 0.1.7 / 2010-04-15

 * minor fix

=== Version 0.1.6 / 2010-04-08

 * browser was not closed when Watir::IE#run_error_checks throwed an exception

=== Version 0.1.5 / 2010-04-08

 * fixed a problem where HtmlFormatter threw an ugly exception due to the problem when browser was not opened

=== Version 0.1.4 / 2010-04-06

 * added dependency for win32screenshot

=== Version 0.1.3 / 2010-04-06

 * fixed a bug where inner table was not shown with Watir::Table#to_a when it was not a direct child, but some other element was in between for example form, span, div etc.

=== Version 0.1.2 / 2010-04-05

 * Added match_array matcher for RSpec for using with Array when regular expressions are needed. It is useful when verifying html tables with #to_a method.
    expected_array = ["1", "2", /\d+/, "3"]
    
    ["1", "2", "66", "3"].should match_array(expected_array)
    table(:id => "table_id").to_a.should match_array(expected_array)

=== Version 0.1.1 / 2010-04-04

* Watir::Table#to_a and Watir::TableRow#to_a work now well with tr, th, td elements, colspan and nested tables.
This means that you can test easily tables now:
    expected_table = [["one", "two"], ["three", "four"]]
    table(:id => "table_id").to_a.should =~ expected_table

* removed strict version requirements for dependencies


=== Version 0.1.0 / 2010-04-03

First release of WatiRspec, a small library for combining Watir and RSpec for browser-based functional testing in Ruby.
